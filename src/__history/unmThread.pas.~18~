unit unmThread;

interface

uses
  System.Classes, SysUtils, Windows, ComCtrls;

type
  TnmThread = class(TThread)
  private
    iFTempo: integer;
    FprogressBar: TProgressBar;
  protected
    procedure Execute; override;
  public
    constructor Create;
    destructor Destroy; override;

    property iTempo: Integer read iFTempo write iFTempo;
    property ProgressBar: T
  end;

implementation

{ TnmThread }

constructor TnmThread.Create;
begin
  inherited Create(true);
end;

destructor TnmThread.Destroy;
begin

  inherited;
end;


procedure TnmThread.Execute;
var
  iLaco,
  iTempoAguardar: integer;
begin
 inherited;

 while not Terminated do
 begin
    for iLaco := 0 to 100 do
    begin
      iTempoAguardar := Random(iFTempo);
      Sleep(iTempoAguardar);
    end;
  end;

end;

end.
